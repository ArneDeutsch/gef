/*
 * generated by Xtext
 */
package org.eclipse.gef4.dot.internal.parser.validation;

import org.eclipse.gef4.dot.internal.parser.arrowtype.ArrowShape;
import org.eclipse.gef4.dot.internal.parser.arrowtype.ArrowtypePackage;
import org.eclipse.gef4.dot.internal.parser.arrowtype.DeprecatedArrowShape;
import org.eclipse.gef4.dot.internal.parser.arrowtype.PrimitiveShape;
import org.eclipse.xtext.validation.Check;

/**
 * This class contains custom validation rules.
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#
 * validation
 */
public class DotArrowTypeJavaValidator extends
		org.eclipse.gef4.dot.internal.parser.validation.AbstractDotArrowTypeJavaValidator {

	/**
	 * Checks that the side modifier is not used in combination with illegal
	 * primitive shapes.
	 * 
	 * @param arrowShape
	 *            The arrowShape element to check.
	 */
	@Check
	public void checkSideModifier(ArrowShape arrowShape) {
		if (arrowShape.getSide() != null
				&& (PrimitiveShape.DOT.equals(arrowShape.getShape())
						|| PrimitiveShape.INV.equals(arrowShape.getShape())
						|| PrimitiveShape.NONE.equals(arrowShape.getShape()))) {
			warning("The side modifier '" + arrowShape.getSide()
					+ "' may not be combined with primitive shape '"
					+ arrowShape.getShape() + "'.",
					ArrowtypePackage.Literals.ARROW_SHAPE__SIDE);
		}
	}

	/**
	 * Checks that no deprecated arrow shapes are used
	 * 
	 * @param arrowShape
	 *            The arrowShape element to check.
	 */
	@Check
	public void checkDeprecatedArrowShape(DeprecatedArrowShape arrowShape) {
		warning("Arrow shape '" + arrowShape.getShape().toString()
				+ "' is a deprecated DOT arrow type for Edge.",
				ArrowtypePackage.Literals.DEPRECATED_ARROW_SHAPE__SHAPE);
	}
}
